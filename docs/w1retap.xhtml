<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><title>W1RETAP</title><meta name="generator" content="StarOffice/OpenOffice.org XSLT (http://xml.openoffice.org/sx2ml)" /><meta name="author" content="Jonathan Hudson" /><meta name="created" content="2005-08-02T21:27:03" /><meta name="changedby" content="Jonathan Hudson" /><meta name="changed" content="2005-10-05T09:31:56" /><meta name="subject" content="User Guide" /><base href="." /><style type="text/css">
	@page { size: 20.999cm 29.699cm; margin-top: 2cm; margin-bottom: 2cm; margin-left: 2cm; margin-right: 2cm }
	table { border-collapse:collapse; border-spacing:0; empty-cells:show }
	td, th { vertical-align:top; }
	h1, h2, h3, h4, h5, h6 { clear:both }
	ol, ul { padding:0; }
	* { margin:0; }
	*.fr1 { font-size:12pt; vertical-align:top; background-color:transparent; }
	*.Graphics { font-size:12pt; vertical-align:top; text-align:center; }
	*.BlockHighLight { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:4.5cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; background-color:#ccccff; padding:0.101cm; border-width:0.0133cm; border-style:solid; border-color:#ccccff; }
	*.BoxedSource { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0.499cm; margin-right:0cm; margin-top:0cm; margin-bottom:0cm; text-indent:0cm; background-color:#ccccff; padding:0.101cm; border-width:0.0133cm; border-style:solid; border-color:#ccccff; }
	*.BoxedText { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0.499cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; background-color:#ccccff; padding:0.101cm; border-width:0.0133cm; border-style:solid; border-color:#ccccff; }
	*.Caption { font-family:'Times New Roman'; font-size:10pt; margin-top:0.212cm; margin-bottom:0.212cm; font-style:italic; }
	*.Footer { font-family:'Bitstream Vera Sans'; font-size:10pt; background-color:transparent; }
	*.Header { font-family:'Bitstream Vera Sans'; font-size:10pt; }
	*.Heading { font-family:Arial; font-size:14pt; margin-top:0.423cm; margin-bottom:0.212cm; }
	*.Heading1 { font-family:'Bitstream Vera Sans'; font-weight:bold; font-size:115%; margin-top:0.423cm; margin-bottom:0.212cm; margin-left:0.499cm; margin-right:0cm; text-indent:0cm; padding:0.049cm; border-left-style:none; border-right-style:none; border-top-style:none; border-bottom-width:0.035cm; border-bottom-style:solid; border-bottom-color:#0066cc; color:#0066cc; font-weight:bold; }
	*.Heading2 { font-family:'Bitstream Vera Sans'; font-size:12pt; margin-top:0.423cm; margin-bottom:0.212cm; margin-left:0.499cm; margin-right:0cm; text-indent:0cm; color:#0066cc; font-style:normal; font-weight:bold; }
	*.Heading3 { font-family:'Bitstream Vera Sans'; font-weight:bold; font-size:12pt; margin-top:0.499cm; margin-bottom:0.101cm; margin-left:0.64cm; margin-right:0cm; text-indent:0cm; color:#000080; font-weight:bold; }
	*.Index { font-family:'Times New Roman'; font-size:12pt; }
	*.List { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0.499cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; }
	*.ListContents { font-family:'Times New Roman'; font-size:12pt; margin-left:1cm; margin-right:0cm; text-indent:0cm; }
	*.ListHeading { font-family:'Times New Roman'; font-size:12pt; margin-left:0cm; margin-right:0cm; text-indent:0cm; }
	*.NameList { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:4.5cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:-4.001cm; }
	*.P1 { font-family:'Bitstream Vera Sans'; font-size:14pt; margin-top:0cm; margin-bottom:0.21cm; text-align:right ! important; background-color:transparent; color:#0066cc; font-style:normal; }
	*.P10 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; }
	*.P11 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:4.5cm; margin-right:0cm; margin-top:0cm; margin-bottom:0cm; text-indent:0cm; background-color:#ccccff; padding:0.101cm; border-width:0.0133cm; border-style:solid; border-color:#ccccff; }
	*.P12 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:4.5cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:-4.001cm; font-style:italic; }
	*.P13 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:1.251cm; margin-right:0cm; margin-top:0cm; margin-bottom:0cm; text-indent:0cm; background-color:#ccccff; padding:0.101cm; border-width:0.0133cm; border-style:solid; border-color:#ccccff; }
	*.P14 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0.499cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; }
	*.P2 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0.499cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; }
	*.P3 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0.499cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; }
	*.P4 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; background-color:#ccccff; padding:0.101cm; border-width:0.0133cm; border-style:solid; border-color:#ccccff; }
	*.P5 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0.499cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; }
	*.P6 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0.499cm; margin-right:0cm; margin-top:0cm; margin-bottom:0cm; text-indent:0cm; background-color:#ccccff; padding:0.101cm; border-width:0.0133cm; border-style:solid; border-color:#ccccff; }
	*.P7 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0.499cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; }
	*.P8 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:3.752cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; }
	*.P9 { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:4.5cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:-4.001cm; }
	*.Standard { font-family:'Times New Roman'; font-size:12pt; }
	*.Subtitle { font-family:'Bitstream Vera Sans'; font-size:14pt; margin-top:0cm; margin-bottom:0.21cm; text-align:right ! important; background-color:transparent; color:#0066cc; font-style:normal; }
	*.TableContents { font-family:'Bitstream Vera Sans'; font-size:10pt; }
	*.TableHeading { font-family:'Bitstream Vera Sans'; font-size:10pt; text-align:left ! important; font-style:normal; font-weight:bold; }
	*.Textbody { font-family:'Bitstream Vera Sans'; font-size:10.5pt; margin-left:0.499cm; margin-right:0cm; margin-top:0cm; margin-bottom:0.212cm; text-indent:0cm; }
	*.Title { font-family:'Bitstream Vera Sans'; font-weight:bold; font-size:18pt; margin-top:0.423cm; margin-bottom:0.212cm; text-align:right ! important; color:#0066cc; font-weight:bold; }
	*.Table1 { width:12.303cm; margin-left:0.586cm; margin-right:4.11cm; float:none; }
	*.Table1A1 { padding:0.097cm; border-left-width:0.0133cm; border-left-style:solid; border-left-color:#000000; border-right-style:none; border-top-width:0.0133cm; border-top-style:solid; border-top-color:#000000; border-bottom-width:0.0133cm; border-bottom-style:solid; border-bottom-color:#000000; }
	*.Table1A2 { padding:0.097cm; border-left-width:0.0133cm; border-left-style:solid; border-left-color:#000000; border-right-style:none; border-top-style:none; border-bottom-width:0.0133cm; border-bottom-style:solid; border-bottom-color:#000000; }
	*.Table1C1 { padding:0.097cm; border-width:0.0133cm; border-style:solid; border-color:#000000; }
	*.Table1C2 { padding:0.097cm; border-left-width:0.0133cm; border-left-style:solid; border-left-color:#000000; border-right-width:0.0133cm; border-right-style:solid; border-right-color:#000000; border-top-style:none; border-bottom-width:0.0133cm; border-bottom-style:solid; border-bottom-color:#000000; }
	*.Table1A { width:3.995cm; }
	*.Table1B { width:4.154cm; }
	*.BulletSymbols { color:#0066cc; font-family:StarSymbol; font-size:14pt; }
	*.EndnoteSymbol { }
	*.FootnoteSymbol { }
	*.Internetlink { color:#0066cc; text-decoration:underline; }
	*.SourceText { font-family:'Courier New'; }
	*.StrongEmphasis { font-weight:bold; }
	*.T1 { font-weight:bold; }
	*.T2 { font-weight:bold; }
	*.T3 { font-weight:normal; }
	*.T4 { font-family:'Courier New'; font-weight:normal; }
	*.T5 { font-family:'Standard Symbols L'; }
	*.Teletype { font-family:'Courier New'; font-size:10pt; font-weight:normal; }
	*.UserEntry { font-family:'Courier New'; }
	*.VisitedInternetLink { color:#800000; text-decoration:underline; }
	</style></head><body dir="ltr"><p class="Title">W1RETAP </p><p class="P1">A One-wire sensor logging application<br />Jonathan Hudson<br />&lt;<a href="mailto:jh+w1retap@daria.co.uk">jh+w1retap@daria.co.uk</a>&gt;</p><h1 class="Heading1"><a name="Introduction" />Introduction</h1><h2 class="Heading2"><a name="Overview" />Overview</h2><p class="Textbody"><span class="T1">W1RETAP</span> is a system for logging data from 1-wire sensors to either a relational database or files (or combination thereof). </p><p class="Textbody">The initial release supports any number of the following sensors from <a href="http://www.aagelectronica.com/"><span class="Internetlink">AAG Electrónica (AAG)</span></a> based on <a href="http://www.dalsemi.com/">Dallas Semiconductors</a> devices: </p><ul style="margin-left:1.25cm;"><li class="P2" style="margin-left:0.5cm;"><p class="P2" style="margin-left:0cm;">TAI8520 (DS1820 / DS18S20) Temperature sensors; </p></li><li class="P2" style="margin-left:0.5cm;"><p class="P2" style="margin-left:0cm;">TAI8540B (DS2438) Humidity Sensor; </p></li><li class="P2" style="margin-left:0.5cm;"><p class="P2" style="margin-left:0cm;">TAI8570 Pressure Sensor; </p></li><li class="P2" style="margin-left:0.5cm;"><p class="P2" style="margin-left:0cm;">TAI8575 Rain Gauge. </p></li></ul><p class="Textbody">I do not own a TAI8515 Weather Station / Anemometer, so this is not supported, but as this device is supported by the Dallas libusblinux300 SDK, upon which <span class="T2">W1RETAP</span> is based, then adding support should be easy. </p><p class="Textbody"><span class="T2">W1RETAP</span> is highly flexible in the way that 1-wire sensor data is logged; a system of  "plugin" modules allow the user to choose the most appropriate logging method. Currently supported logging modules are: </p><ul style="margin-left:1.25cm;"><li class="P3" style="margin-left:0.5cm;"><p class="P3" style="margin-left:0cm;">Sqlite (version 3); </p></li><li class="P3" style="margin-left:0.5cm;"><p class="P3" style="margin-left:0cm;">PostgreSQL; </p></li><li class="P3" style="margin-left:0.5cm;"><p class="P3" style="margin-left:0cm;">MySQL; </p></li><li class="P3" style="margin-left:0.5cm;"><p class="P3" style="margin-left:0cm;">ODBC; </p></li><li class="P3" style="margin-left:0.5cm;"><p class="P3" style="margin-left:0cm;">Text file; </p></li><li class="P3" style="margin-left:0.5cm;"><p class="P3" style="margin-left:0cm;">CSV file; </p></li><li class="P3" style="margin-left:0.5cm;"><p class="P3" style="margin-left:0cm;">XML file. </p></li></ul><p class="Textbody"><span class="T1">W1RETAP</span> is designed to run on the Linux operating system and assumes that the interface between the computer and the 1-wire system is a DS2490 USB adaptor. As the software is based on the Dallas Semi/Maxim public domain 1-wire USB SDK, adapting for other interfaces (e.g.serial) should be trivial. Likewise, porting to any other operating system that supports the Dallas SDK, the gcc compiler and dynamically loadable modules should also be possible. </p><p class="Textbody">The Dallas public domain 1-wire SDK is included in its entirety, and may be build from <span class="SourceText">makefile.orig</span>. This will build all the Dallas sample applications, including <span class="SourceText">tstfind</span> which detects devices on the 1-wire network, and other programs that may be useful for troubleshooting.</p><p class="Textbody"><span class="T2">W1RETAP</span><span class="T3"> does not in itself offer any graphical user interface, however there is a </span><span class="T4">contrib</span> directory that contains scripts to build web pages, and a GNOME panel applet. </p><p class="Textbody">Unless otherwise indicated, the software is released under the GNU Public Licence.  </p><h2 class="Heading2"><a name="Organisation_of_the_w1retap_release" />Organisation of the w1retap release</h2><p class="Textbody">The <span class="T2">W1RETAP</span> release is organised into a number of sub-directories:</p><p class="Textbody">This distribution is organised as:  </p><p class="NameList"><span class="T2">src</span>        Contains the <span class="T2">W1RETAP</span> software. </p><p class="NameList"><span class="T2">src/libusblinux300</span>        The Dallas PD 1-wire SDK</p><p class="NameList"><span class="T2">doc</span>        Documentation on configuring and using <span class="T2">W1RETAP</span></p><p class="NameList"><span class="T2">contrib</span>        Various scripts and applications, including a web page builder, a wunderground.com reporting script, RSS feeder, and GNOME panel applet. </p><h1 class="Heading1"><a name="Installation" />Installation</h1><h2 class="Heading2"><a name="Choosing_the_logging_method" />Choosing the logging method</h2><p class="Textbody">Installation of <span class="T2">W1RETAP</span><span class="T3"> requires that the software is compiled from source, you may first wish to d</span>ecide which backend logging modules you are going to use (however the build system will build all those it can on your machine). These are build as loadable modules (shared libraries) and include: </p><p class="Textbody"> </p><div style="text-align:left"><table border="0" cellspacing="0" cellpadding="0" class="Table1"><colgroup><col width="175" /><col width="182" /><col width="182" /></colgroup><tr><td style="text-align:left;width:3.995cm; " class="Table1A1"><p class="TableHeading">Type </p></td><td style="text-align:left;width:4.154cm; " class="Table1A1"><p class="TableHeading">Name </p></td><td style="text-align:left;width:4.154cm; " class="Table1C1"><p class="TableHeading">Module </p></td></tr><tr><td style="text-align:left;width:3.995cm; " class="Table1A2"><p class="TableContents">Sqlite (version 3) </p></td><td style="text-align:left;width:4.154cm; " class="Table1A2"><p class="TableContents">w1sqlite  </p></td><td style="text-align:left;width:4.154cm; " class="Table1C2"><p class="TableContents"><span class="SourceText">libw1sqlite.so </span></p></td></tr><tr><td style="text-align:left;width:3.995cm; " class="Table1A2"><p class="TableContents">PostgreSQL </p></td><td style="text-align:left;width:4.154cm; " class="Table1A2"><p class="TableContents">w1pgsql  </p></td><td style="text-align:left;width:4.154cm; " class="Table1C2"><p class="TableContents"><span class="SourceText">libw1pgsql.so </span></p></td></tr><tr><td style="text-align:left;width:3.995cm; " class="Table1A2"><p class="TableContents">MySQL </p></td><td style="text-align:left;width:4.154cm; " class="Table1A2"><p class="TableContents">w1mysql  </p></td><td style="text-align:left;width:4.154cm; " class="Table1C2"><p class="TableContents"><span class="SourceText">libw1mysql.so </span></p></td></tr><tr><td style="text-align:left;width:3.995cm; " class="Table1A2"><p class="TableContents">ODBC </p></td><td style="text-align:left;width:4.154cm; " class="Table1A2"><p class="TableContents">w1odbc  </p></td><td style="text-align:left;width:4.154cm; " class="Table1C2"><p class="TableContents"><span class="SourceText">libw1odbc.so </span></p></td></tr><tr><td style="text-align:left;width:3.995cm; " class="Table1A2"><p class="TableContents">Text file  </p></td><td style="text-align:left;width:4.154cm; " class="Table1A2"><p class="TableContents">w1file  </p></td><td style="text-align:left;width:4.154cm; " class="Table1C2"><p class="TableContents"><span class="SourceText">libw1file.so </span></p></td></tr><tr><td style="text-align:left;width:3.995cm; " class="Table1A2"><p class="TableContents">CSV file  </p></td><td style="text-align:left;width:4.154cm; " class="Table1A2"><p class="TableContents">w1csv  </p></td><td style="text-align:left;width:4.154cm; " class="Table1C2"><p class="TableContents"><span class="SourceText">libw1csv.so </span></p></td></tr><tr><td style="text-align:left;width:3.995cm; " class="Table1A2"><p class="TableContents">XML file  </p></td><td style="text-align:left;width:4.154cm; " class="Table1A2"><p class="TableContents">w1xml  </p></td><td style="text-align:left;width:4.154cm; " class="Table1C2"><p class="TableContents"><span class="SourceText">libw1xml.so </span></p></td></tr></table></div><p class="Textbody"> </p><p class="Textbody">For each of the RDBMS loggers, you will need to have the relevant development files (header files and libraries installed). The file based modules have no external dependencies, and you can always use <span class="SourceText">libw1file.so</span>, as this can provide fall back configuration data. </p><h2 class="Heading2"><a name="Build_Process" />Build Process</h2><p class="Textbody"><span class="T2">W1RETAP</span><span class="T3"> uses </span><span class="SourceText">autoconf</span> and in theory will detect the features that it can build on your machine. Backends can be installed and configured while <span class="T2">W1RETAP</span> is running, so you might as well build all you may ever need, assuming you have the dependencies satisfied. </p><h2 class="Heading2"><a name="Build_and_install" />Build and install</h2><p class="Textbody">Issue the following commands:  </p><p class="P4">$ ./configure<br />$ make<br />$ sudo make install  # (or run as root).</p><p class="Textbody"><span class="Teletype">make install</span> installs the <span class="T2">W1RETAP</span> application into <span class="Teletype">/usr/local/bin</span> and its plugins to <span class="Teletype">/usr/local/lib/w1retap/ </span>with the default <span class="SourceText">autoconf prefix</span> setting. To change this, run ./configure with your preferred settings, for example:</p><p class="P4">$ ./configure –prefix=/usr </p><p class="Textbody">will install the application into <span class="SourceText">/usr/bin</span> and the plugin modules to <span class="SourceText">/usr/lib/w1retap/</span>.</p><p class="Textbody">You can force the installed programs to be stripped with <span class="Teletype">make install-strip</span>, however, as far as the author can ascertain, this does not strip the modules. You can force the plugin modules to be stripped with <span class="SourceText">STRIP_LIBS=yes</span>, e.g.:</p><p class="P4">$ sudo make install-strip  STRIP_LIBS=yes prefix=/usr</p><h2 class="Heading2"><a name="Create_configuration_of_the_database__28if_used_29" />Create configuration of the database (if used)</h2><p class="Textbody">The configuration comprises two areas:  </p><ul style="margin-left:1.25cm;"><li class="P5" style="margin-left:0.5cm;"><p class="P5" style="margin-left:0.25cm;">Configuration of the 1-wire sensors. This may be file based or in a relational database;  </p></li><li class="P5" style="margin-left:0.5cm;"><p class="P5" style="margin-left:0.25cm;">Configuration of the application. The user running <span class="T2">W1RETAP</span> needs to create a set of configuration files in their home directory under <span class="Teletype">.config/w1retap</span>.</p><p class="P6" style="margin-left:0.25cm;">$ mkdir -p ~/.config/w1retap </p></li></ul><p class="Textbody"> </p><p class="Textbody">The <span class="Teletype">~/.config/w1retap</span> directory must contain the file <span class="Teletype">rc</span> which configures the application, and optionally <span class="Teletype">applet</span> which configures the GNOME applet (see <span class="SourceText">contrib/w1temp</span> for details) and <span class="Teletype">sensors</span> which defines the 1-wire sensors (unless the sensors are defined in a RDBMS). </p><h2 class="Heading2"><a name="Creating_the_database" />Creating the database</h2><p class="Textbody">If you're using an RDBMS for logging (recommended), create the RDBMS from the <span class="Teletype">sensors.sql</span> file. </p><p class="Textbody">e.g. </p><p class="BoxedText">$ sqlite3 /var/tmp/sensors.db &lt; sensor.sql </p><p class="Textbody">or  </p><p class="BoxedText">$ psql -U USERNAME template1<br />template1=# create database w1retap;<br />CREATE DATABASE<br />template1=# \c w1retap;<br />You are now connected to database "w1retap".<br />w1retap=# \i sensors.sql<br />CREATE TABLE<br />CREATE TABLE<br />CREATE TABLE<br />CREATE TABLE<br />w1retap=# \q</p><p class="Textbody">or </p><p class="BoxedText">mysql -u USERNAME -p<br />mysql&gt; create database w1retap;<br />Query OK, 1 row affected (0.02 sec)<br />mysql&gt; use w1retap<br />Database changed<br />mysql&gt; source sensors.sql<br />Query OK, 0 rows affected (0.01 sec)<br />Query OK, 0 rows affected (0.13 sec)<br />Query OK, 0 rows affected (0.02 sec)<br />Query OK, 0 rows affected (0.09 sec)<br />mysql&gt; quit</p><h2 class="Heading2"><a name="Configuration_of_sensors" />Configuration of sensors</h2><p class="Textbody">The initial release supports any number of the following sensors from AAG Electrónica (AAG) based on Dallas Semiconductors devices.  </p><ul style="margin-left:1.25cm;"><li class="P7" style="margin-left:0.5cm;"><p class="P7" style="margin-left:0.25cm;">TAI8520 (DS1820 / DS18S20) Temperature sensors; </p></li><li class="P7" style="margin-left:0.5cm;"><p class="P7" style="margin-left:0.25cm;">TAI8540B (DS2438) Humidity Sensor; </p></li><li class="P7" style="margin-left:0.5cm;"><p class="P7" style="margin-left:0.25cm;">TAI8570 Pressure Sensor; </p></li><li class="P7" style="margin-left:0.5cm;"><p class="P7" style="margin-left:0.25cm;">TAI8575 Rain Gauge. </p></li></ul><p class="Textbody">Unlike some advanced 1-wire applications, your sensors are not auto-detected. You need to either populate the w1sensors table in the RDBMS or create a delimited configuration file <span class="Teletype">~/.config/w1retap/sensors</span>. </p><p class="Textbody">The w1sensors table and the <span class="Teletype">~/.config/w1retap/sensors</span> file both contain the same information, from the table: </p><p class="BoxedSource">CREATE TABLE w1sensors </p><p class="BoxedSource">(  </p><p class="BoxedSource">       device text,</p><p class="BoxedSource">       type text,</p><p class="BoxedSource">       abbrv1 text,</p><p class="BoxedSource">       name1 text,</p><p class="BoxedSource">       units1 text;        </p><p class="BoxedSource">       abbrv2 text,</p><p class="BoxedSource">       name2 text,</p><p class="BoxedSource">       units2 text</p><p class="BoxedSource">); </p><p class="Textbody">   </p><p class="Textbody">For each sensor, we need:  </p><p class="NameList"><span class="T2">Device        </span>The device address. If you have sensors from AAG, then the address will be printed on the case, otherwise, you can use the <span class="Teletype">tstfind</span> program in the <span class="Teletype">src/libusblinux300</span> directory to detect the devices.</p><p class="NameList"><span class="T2">Type</span>        A generic description of the sensor type. This defines how <span class="T2">W1RETAP</span><span class="T3"> will access the device. One</span> of: </p><ul style="margin-left:1.25cm;"><li class="P8" style="margin-left:3.75cm;"><p class="P8" style="margin-left:0.25cm;">Temperature  </p></li><li class="P8" style="margin-left:3.75cm;"><p class="P8" style="margin-left:0.25cm;">Humidity </p></li><li class="P8" style="margin-left:3.75cm;"><p class="P8" style="margin-left:0.25cm;">Pressure </p></li><li class="P8" style="margin-left:3.75cm;"><p class="P8" style="margin-left:0.25cm;">RainGauge </p></li></ul><p class="NameList"><span class="T2">Name</span>        A arbitrary name of a function of the device.</p><p class="P9"><span class="T2">Abbrv</span>        An unique abbreviation (essentially a key) that identifies the device readings in the database.</p><p class="NameList"><span class="T2">Units</span>        The units that the device records.</p><p class="Textbody">It is assumed that each device supports one or two functions, each of these is identified by an arbitrary name, an arbitrary (but unique) abbreviation and the units that the device records in. The presence of the abbreviation field determines if that specific function is logged.  </p><p class="Textbody">So, for example: I have a TAI8570 Pressure Sensor. This actually contains two 1-wire devices, we need to specify the address of the "reader" device. As well as being printed on the case, this was the first address found by the <span class="Teletype">tstfind</span> program. </p><p class="Textbody">So my configuration for this device is:  </p><p class="BoxedSource">device         = 12FC6B34000000A9</p><p class="BoxedSource">type                 = Pressure</p><p class="BoxedSource">abbrv1         = OPRS</p><p class="BoxedSource">name1         = Pressure</p><p class="BoxedSource">units1         = hPa</p><p class="BoxedSource">abbrv2         = OTMP1</p><p class="BoxedSource">name2         = Temperature</p><p class="BoxedSource">units2         = °C   </p><p class="Textbody"> </p><p class="Textbody">This information may either be stored in a database in the  w1sensors table, or in the <span class="Teletype">.config/w1retap/sensors</span> text file (as : or | delimited values): </p><p class="Textbody">e.g.: <span class="T2">SQL:</span></p><p class="BoxedText">INSERT INTO "w1sensors" VALUES('12FC6B34000000A9', 'Pressure', 'OPRS', 'Pressure', 'hPa', 'OTMP1', 'Temperature', '°C'); </p><p class="Textbody">or, .<span class="T2">config/w1retap/sensors: </span></p><p class="BoxedText">12FC6B34000000A9:Pressure:OPRS:Pressure:hPa:OTMP1:Temperature:°C </p><p class="Textbody">For my complete station:  </p><p class="BoxedText">INSERT INTO "w1sensors" VALUES('286DA467000000AD', 'Temperature', 'GHT', 'Greenhouse Temperature', '°C', NULL, NULL, NULL); </p><p class="BoxedText">INSERT INTO "w1sensors" VALUES('2692354D00000095', 'Humidity', 'OHUM', 'Humidity', '%', 'OTMP0', 'Temperature', '°C'); </p><p class="BoxedText">INSERT INTO "w1sensors" VALUES('12FC6B34000000A9', 'Pressure', 'OPRS', 'Pressure', 'hPa', 'OTMP1', 'Temperature', '°C'); </p><p class="BoxedText">INSERT INTO "w1sensors" VALUES('1D9BB10500000089', 'RainGauge', 'RGC0', 'Counter0', 'tips', 'RGC1', 'Counter1', 'tips'); </p><p class="Textbody">or (lines starting # are comments)  </p><p class="BoxedSource">$ cat ~/.config/w1retap/sensors </p><p class="BoxedSource"># Device:Type:Abbrv1:Name1:Units1:[Abbrv2:Name2:Units2] </p><p class="BoxedSource">286DA467000000AD:Temperature:GHT:Greenhouse Temperature:°C::: </p><p class="BoxedSource">2692354D00000095:Humidity:OHUM:Humidity:%:OTMP0:Temperature:°C </p><p class="BoxedSource">12FC6B34000000A9:Pressure:OPRS:Pressure:hPa:OTMP1:Temperature:°C </p><p class="BoxedSource">1D9BB10500000089:RainGauge:RGC0:Counter0:tips:RGC1:Counter1:tips </p><p class="P10">    </p><p class="Textbody">Note that the Greenhouse temperature sensor only has one function, so the abbrv2, name2 and unit2 fields are not defined (or NULL).  </p><h2 class="Heading2"><a name="Configuring_the_W1RETAP_software." />Configuring the W1RETAP software.</h2><p class="Textbody">The main configuration of the application is done via the <span class="Teletype">~/.config/w1retap/rc</span> file (or <span class="Teletype">/etc/default/w1retap</span> if the user's file doesn't exist). </p><p class="Textbody">Some of the options may also be specified on the command line when <span class="T2">W1RETAP</span> is invoked. This defines how <span class="T2">W1RETAP</span> obtains the sensor configuration and how it performs the data logging. </p><p class="Textbody">The file contains a set of key / value pairs, blank lines and unrecognised line (e.g. #...) ignored.  </p><p class="Textbody">e.g.  </p><p class="BoxedSource">#Init file </p><p class="BoxedSource">init =  w1sqlite=/var/tmp/sensors.db</p><p class="BoxedSource">log =  w1sqlite=/var/tmp/sensors.db</p><p class="BoxedSource">#init = w1odbc=DSN=w1retap </p><p class="BoxedSource">#init = w1pgsql=dbname=w1retap user=postgres </p><p class="BoxedSource">#init = w1file </p><p class="BoxedSource">#log = w1xml=/tmp/xmllog.txt </p><p class="BoxedSource">#log = w1file </p><p class="BoxedSource">#log = w1csv=/tmp/csvlog.txt </p><p class="BoxedSource">#log = w1pgsql=dbname=w1retap user=postgres </p><p class="BoxedSource">#log = w1mysql=dbname=w1retap user=jrh host=kanga password=sososecret </p><p class="Textbody"> </p><p class="P10">Where the keys are: </p><p class="NameList"><span class="T2">init</span>         The initialisation data for the sensors, e.g. a database with a w1sensors table, or a file. The value part is the name of a plugin and optionally, parameters (see below).</p><p class="NameList"><span class="T2">log</span>        The log database to the readings table, or a file for a file data sink. The value part is the name of a plugin and optionally, parameters (see section 8).</p><p class="NameList"><span class="T2">device</span>        The name of the interface device. For Linux, using the standard USB interface, this defaults to "DS2490-1".</p><p class="NameList"><span class="T2">delay</span>        The delay between successive reading of the the 1-wire bus. All sensors are read in one hit.</p><p class="NameList"><span class="T2">daemonise</span>        If set to 1, <span class="T2">W1RETAP</span> detaches and runs in the background.</p><p class="NameList"><span class="T2">logtemp</span>        By default, <span class="T2">W1RETAP</span> writes the latest sensor values to a file <span class="Teletype">/tmp/.w1retap.dat</span>. If you set logtemp to 0, this file is not updated. The file contains, for each sensor, the abbreviation and value and a time stamp (Unix epoch "time_t" and ISO date format):</p><p class="P11">GHT=23.75 °C </p><p class="P11">OHUM=75.95 % </p><p class="P11">OTMP0=19.50 °C </p><p class="P11">OPRS=1012.97 hPa </p><p class="P11">OTMP1=20.23 °C </p><p class="P11">RGC0=3517.00 tips </p><p class="P11">RGC1=3481.00 tips </p><p class="P11">udate=1122818880 </p><p class="P11">date=2005-07-31T15:08:00+0100 </p><p class="P12">        “Just an overcast Sunday afternoon in July”.</p><p class="Textbody">Only the first 'init' entry is used; multiple 'log' entries may be given and are all logged to in the order defined. </p><h2 class="Heading2"><a name="Log_and_Init_options" />Log and Init options</h2><p class="Textbody">For the log and init options, the information supplied has two parts, separated by an equals sign. The name of the plugin handling that information and any additional information. For a file based plugin, this will be the file name and for a database, the name of the database and any access control parameters. </p><p class="Textbody">For each plugin, the usage and parameters are: </p><p class="NameList"><span class="T2">w1file</span>        This provides basic file system access for configuration and logging. If used as a 'init' parameter, it reads <span class="SourceText">~/.config/w1retap/sensors</span> (or supplied filename) for sensor information as described for file based sensor configuration.</p><p class="BlockHighLight">e.g. </p><p class="BlockHighLight">init = w1file<br />init = w1file=/etc/w1sensors.dat</p><p class="NameList">        The first case assumes <span class="Teletype">~/.config/w1retap/sensors</span> contains the configuration data, the second explicitly reads <span class="Teletype">/etc/w1sensors.dat</span>.</p><p class="NameList">        If used as a 'log' parameter, it writes one entry per line to STDOUT or a supplied file name:</p><p class="BlockHighLight">log = w1file<br />log = w1file=/tmp/w1file.log</p><p class="NameList">           The data output is in the format (date abbreviation value):</p><p class="BlockHighLight">2005-07-29T18:11:28+0100 GHT 20.312500<br />2005-07-29T18:11:28+0100 OHUM 74.050064<br />2005-07-29T18:11:28+0100 OTMP0 17.687500<br />2005-07-29T18:11:28+0100 OPRS 1009.950562<br />2005-07-29T18:11:28+0100 OTMP1 18.510059<br />2005-07-29T18:11:28+0100 RGC0 3496.000000<br />2005-07-29T18:11:28+0100 RGC1 3460.000000</p><p class="Textbody"> </p><p class="NameList"><span class="T2">w1xml</span>        This provides basic file system access for logging only. It writes an XML file to STDOUT or a supplied file name:</p><p class="BlockHighLight">log = w1xml<br />log = w1xml=/tmp/w1xml.log</p><p class="NameList">        The data output is in the format:</p><p class="P13">&lt;?xml version="1.0" encoding="utf-8"?&gt;<br />&lt;report timestamp="2005-08-01T19:51:45+0100" unixepoch="1122922305"&gt;<br />  &lt;sensor name="GHT" value="17.0625" units="°C"&gt;&lt;/sensor&gt;<br />  &lt;sensor name="OHUM" value="96.4636" units="%"&gt;&lt;/sensor&gt;<br />  &lt;sensor name="OTMP0" value="16.2500" units="°C"&gt;&lt;/sensor&gt;<br />  &lt;sensor name="OPRS" value="1017.8268" units="hPa"&gt;&lt;/sensor&gt;<br />  &lt;sensor name="OTMP1" value="16.9916" units="°C"&gt;&lt;/sensor&gt;<br />  &lt;sensor name="RGC0" value="3544.0000" units="tips"&gt;&lt;/sensor&gt;<br />  &lt;sensor name="RGC1" value="3508.0000" units="tips"&gt;&lt;/sensor&gt;<br />&lt;/report&gt;</p><p class="Textbody">    </p><p class="NameList"><span class="T2">w1csv</span>        This module provides basic file system access for logging only.    It writes an CSV file to STDOUT or a supplied file name:</p><p class="BlockHighLight">log = w1csv<br />log = w1csv=/tmp/w1data.csv</p><p class="NameList">        The data output is in the format of a timestamp followed by abbreviations, values and units (all on one line):</p><p class="BlockHighLight">"2005-08-01T19:51:45+0100", "GHT", 17.062500, "°C", "OHUM", 96.463608, "%", "OTMP0", 16.250000, "°C", "OPRS", 1017.826843, "hPa", "OTMP1", 16.991602, "°C", "RGC0", 3544.000000, "tips", "RGC1", 3508.000000, "tips" </p><p class="NameList"><span class="T2">w1sqlite</span>        This provides database system access for configuration and   logging using an Sqlite v.3 &lt;<a href="http://www.sqlite.org/">http://www.sqlite.org</a>&gt;  RDBMS. If used as a 'init' parameter, it reads the w1sensors table for sensor information as described for RDBMS based sensor configuration.</p><p class="NameList">        e.g.</p><p class="BlockHighLight">init = w1sqlite=/var/tmp/sensors.db </p><p class="NameList">        The name of the database is a mandatory parameter.</p><p class="NameList">        If used as a 'log' parameter, it writes data to the readings table.</p><p class="BlockHighLight">log = w1sqlite=/var/tmp/sensors.db </p><p class="NameList">        The data is logged as (date abbreviation value):</p><p class="BlockHighLight">$ sqlite3 /var/tmp/sensors.db<br />SQLite version 3.2.2<br />Enter ".help" for instructions<br />sqlite&gt; select * from readings order by date  desc limit 7;<br />1122735840|GHT|25.625<br />1122735840|OHUM|87.6851425170898<br />1122735840|OTMP0|18.34375<br />1122735840|OPRS|1009.77972412109<br />1122735840|OTMP1|19.1231441497803<br />1122735840|RGC0|3498<br />1122735840|RGC1|3462</p><p class="NameList">        Where date is the unix epoch time (time_t), seconds since 00:00:00 1 Jan 1970 UTC.</p><p class="NameList"><span class="T2">w1pqsql        </span>This provides database system access for configuration and    logging using an PostgreSQL &lt;<a href="http://www.postgresql.org/">http://www.postgresql.org</a>&gt; RDBMS.</p><p class="NameList">        If used as a 'init' parameter, it reads the w1sensors table for sensor information as described for RDBMS based sensor configuration.</p><p class="NameList">        e.g.</p><p class="BlockHighLight">init = w1pgsql=dbname=w1retap user=postgres </p><p class="NameList">        The name of the database is a mandatory parameter, followed by optional parameters in the format described for PostgreSQL client programs e.g. See   <a href="http://www.postgresql.org/docs/8.0/interactive/libpq.html">http://www.postgresql.org/docs/8.0/interactive/libpq.html </a>section 27.1 describing the 'conninfo' format.</p><p class="NameList">        If used as a 'log' parameter, it writes data to the readings table.</p><p class="BlockHighLight">log = w1pgsql=dbname=w1retap user=postgres </p><p class="NameList">        The data is logged as (date abbreviation value) [see sqlite example].</p><p class="NameList"><span class="T2">w1mysql</span>        This provides database system access for configuration and logging using a MySQL &lt; <a href="http://dev.mysql.com/">http://dev.mysql.com/</a>&gt; RDBMS. </p><p class="NameList">        If used as a 'init' parameter, it reads the w1sensors table for sensor information as described for RDBMS based sensor configuration.</p><p class="NameList">        e.g.</p><p class="BlockHighLight">init = w1mysql=dbname=w1retap user=w1retap host=kanga </p><p class="NameList">        The name of the database is a mandatory parameter, followed by optional parameters of:</p><p class="BlockHighLight">dbname - name of the database<br />user – username<br />password - user's password<br />host - database server</p><p class="NameList">        If used as a 'log' parameter, it writes data to the readings table.</p><p class="BlockHighLight">log = w1mysql=dbname=w1retap user=jrh host=kanga </p><p class="NameList">        The data is logged as (date abbreviation value) [see sqlite example].</p><p class="NameList"><span class="T2">w1odbc        </span>This provides database system access for configuration and logging using ODBC &lt;<a href="http://www.unixodbc.org/">http://www.unixodbc.org/</a>&gt; RDBMS. It may thus be used for any database for which there is no specific <span class="T2">W1RETAP</span> module, but you  have an ODBC driver.</p><p class="NameList">        If used as a 'init' parameter, it reads the w1sensors table for sensor information as described for RDBMS based sensor configuration.</p><p class="NameList">        e.g.</p><p class="BlockHighLight">init = w1odbc=DSN=W1RETAP </p><p class="NameList">        The DSN of the database is a mandatory parameter.</p><p class="NameList">        If used as a 'log' parameter, it writes data to the readings table.</p><p class="BlockHighLight">log = w1odbc=DSN=W1RETAP </p><p class="NameList">        The data is logged as (date abbreviation value) [see sqlite example].</p><h2 class="Heading2"><a name="Running_w1retap" />Running <span class="T2">w1retap</span></h2><p class="Textbody"><span class="T2">W1RETAP</span> is started from the command line (shell script, @reboot cron job etc).  Assuming the permissions of usb access allow, it requires no special privileges and may be run from a normal user account.</p><p class="Textbody">It accepts the following command options: </p><p class="BoxedText">$ w1retap [-T] [-d] [-i interface] [-N] [-v] [-t sec] [-w] [-r repfile] </p><p class="BoxedText">where: </p><p class="BoxedText">-T disables /tmp/.w1retap.dat logging (e.g. logtemp = 0) </p><p class="BoxedText">-d  causes <span class="T3">w1retap</span> to daemonise (run in backgound) (e.g. daemonise = 1)</p><p class="BoxedText">-i interface specified the interface device. Defaults to  </p><p class="BoxedText">-i DS2490-1, (e.g. interface = DS2490-1) </p><p class="BoxedText">-N Do not open the device or read the sensors (for debugging). </p><p class="BoxedText">-v verbose (display configuration information). </p><p class="BoxedText">-t secs Specify delay loop so -t 120 reads the sensors every 120s [2 minutes] (e.g. Delay = 120) </p><p class="BoxedText">-w Wait at after startup to the next “Delay” time before reading the sensors (vice immediately). </p><p class="BoxedText">-r repfile Report to file “repfile” when a sensor is out reports out of range data (see “Rate Limiting” below. </p><p class="Textbody">Equivalent configuration options are show as (e.g. .....). </p><p class="Textbody">The author runs <span class="T2">W1RETAP</span> as:</p><p class="BoxedText">$ w1retap -d -t 120 -w -r /tmp/w1.limits </p><p class="Textbody">$ w1retap -Nv will dump out the configuration,  </p><p class="Textbody">e.g: with <span class="Teletype">~/.config/w1retap/rc</span>:</p><p class="BoxedSource">#Init file </p><p class="BoxedSource">init =  w1sqlite=/var/tmp/sensors.db</p><p class="BoxedSource">#init =  w1file</p><p class="BoxedSource">#init =  w1odbc=DSN=w1retap</p><p class="BoxedSource">#init = w1pgsql=dbname=w1retap user=postgres </p><p class="BoxedSource">log =  w1sqlite=/var/tmp/sensors.db</p><p class="BoxedSource">log =  w1xml=/tmp/w1xmls.log</p><p class="BoxedSource">log =  w1file</p><p class="BoxedSource">log =  w1csv</p><p class="BoxedSource">log = w1pgsql=dbname=w1retap user=w1retap </p><p class="BoxedSource">log = w1mysql=dbname=w1retap user=w1retap host=tigger password=sososecret </p><p class="BoxedSource"># End of file </p><p class="Textbody"> </p><p class="Textbody">$ ./w1retap -Nv </p><p class="BoxedSource">w1retap v0.01 (c) 2005 Jonathan Hudson </p><p class="BoxedSource">Sensors: </p><p class="BoxedSource">286DA467000000AD Temperature </p><p class="BoxedSource">        1: GHT Greenhouse Temperature °C</p><p class="BoxedSource">2692354D00000095 Humidity </p><p class="BoxedSource">        1: OHUM Humidity %</p><p class="BoxedSource">        1: OTMP0 Temperature °C</p><p class="BoxedSource">12FC6B34000000A9 Pressure </p><p class="BoxedSource">        1: OPRS Pressure hPa</p><p class="BoxedSource">        1: OTMP1 Temperature °C</p><p class="BoxedSource">1D9BB10500000089 RainGauge </p><p class="BoxedSource">        1: RGC0 Counter0 tips</p><p class="BoxedSource">        1: RGC1 Counter1 tips</p><p class="BoxedSource">Plugins: </p><p class="BoxedSource"> 0: c [0x80793b8] /usr/lib/w1retap/libw1sqlite.so =&gt; /var/tmp/sensors.db</p><p class="BoxedSource"> 1: l [0x80793b8] /usr/lib/w1retap/libw1sqlite.so =&gt; /var/tmp/sensors.db</p><p class="BoxedSource"> 2: l [0x8079f38] /usr/lib/w1retap/libw1xml.so =&gt; /tmp/w1xmls.log</p><p class="BoxedSource"> 3: l [0x807a238] /usr/lib/w1retap/libw1file.so =&gt;</p><p class="BoxedSource"> 4: l [0x807a5a0] /usr/lib/w1retap/libw1csv.so =&gt;</p><p class="BoxedSource"> 5: l [0x807a960] /usr/lib/w1retap/libw1pgsql.so =&gt; dbname=w1retap user=w1retap</p><p class="BoxedSource"> 6: l [0x807c0c0] /usr/lib/w1retap/libw1mysql.so =&gt; dbname=w1retap user=w1retap host=tigger password=sososecret</p><p class="Textbody"> </p><p class="Textbody">Note that the plugins are assumed to be located in <span class="Teletype">/usr/local/lib/w1retap/</span>, (or where  prefix was set at build time, e.g.  –<span class="SourceText">prefix=/usr ---&gt;</span><span class="T5"> </span><span class="SourceText">/usr/lib/w1retap </span>[as in the above example<span class="SourceText">]</span>) unless the name starts with '/' or '.'; in which case the actual path is used. If you don't give a path, you can name the module without 'lib' and '.so'. The loading mechanism (GLib/gmodule) should work on any platform where dynamically loadable libraries are supported (most Unix, Microsoft Windows etc.), but is only tested on Linux.</p><p class="Textbody">e.g. </p><p class="BoxedText">log = w1csv<br />log = ./libw1xml.so<br />log = /tmp/testme-harder/libw1b0rken.so  </p><h2 class="Heading2"><a name="Rate_Limiting" />Rate Limiting</h2><p class="Textbody">Very occasionally one of the author's sensors will give a wildly inaccurate reading. In order to prevent these from polluting the database, a concept of rating limiting is implemented. This requires a table 'ratelimit' exists, and contains the sensor abbreviation and the maximum acceptable rate in 'units/minute'. The following SQL commands created the authors ratelimit table. </p><p class="BoxedText">create table ratelimit (name text, value real );<br />insert into ratelimit values('GHT', 2.5);<br />insert into ratelimit values('OTMP0', 2.5);<br />insert into ratelimit values('OTMP1', 2.5);<br />insert into ratelimit values('OHUM', 15);<br />insert into ratelimit values('OPRS', 100);<br />insert into ratelimit values('RGC0', 50);<br />insert into ratelimit values('RGC1', 50);</p><p class="Textbody">The values are such that they would not normally be seen, but are less than the obviously bizarre rouge value seen very rarely. </p><h2 class="Heading2"><a name="Viewing_the_data." />Viewing the data.</h2><p class="Textbody">The <span class="Teletype">wplot.rb</span> (and other) scripts in the <span class="Teletype">contrib</span> directory illustrates techniques to access the data and:</p><ul style="margin-left:1.25cm;"><li class="P14" style="margin-left:0.5cm;"><p class="P14" style="margin-left:0.25cm;">Build a web page e.g. &lt;<a href="http://www.daria.co.uk/wx/">http://www.daria.co.uk/wx/</a>&gt;;</p></li><li class="P14" style="margin-left:0.5cm;"><p class="P14" style="margin-left:0.25cm;">Send data to Wunderground.com (e.g. See &lt;<a href="http://www.wunderground.com/global/stations/03865.html">http://www.wunderground.com/global/stations/03865.html</a> &gt;);</p></li><li class="P14" style="margin-left:0.5cm;"><p class="P14" style="margin-left:0.25cm;">Provide an RSS feed (e.g. &lt;<a href="http://www.zen35309.zen.co.uk/wx/wx.xml">http://www.zen35309.zen.co.uk/wx/wx.rss2.xml</a>&gt; );</p></li><li class="P14" style="margin-left:0.5cm;"><p class="P14" style="margin-left:0.25cm;">Provide a static XML document of current conditions, (e.g. &lt;<a href="http://www.zen35309.zen.co.uk/wx/wx_static.xml">http://www.zen35309.zen.co.uk/wx/wx_static.xml</a>&gt; ). The latter format is read by the <span class="T2">W1RETAP</span> GNOME applet (<span class="SourceText">contrib/w1temp</span>) --- you can provide your own location as I'm sure you don't want to know what it's like here in Netley Marsh.</p></li></ul><div class="Textbody"><img width="172" height="183" alt="" src="file:///home/jrh/Projects/w1retap/docs/" class="fr1" />The <span class="SourceText">wplot.pl</span> and other scripts also require that the station table is populated. See <span class="Teletype">contrib/README</span> for details.</div><p class="Textbody">The <span class="Teletype">contrib/w1temp</span> directory contains a GNOME applet that can display a single temperature in the GNOME panel, and a set of data defined by the static XML file in a tooltip.</p><h2 class="Heading2"><a name="Author__2F_contact" />Author / contact</h2><p class="Textbody"><span class="T2">W1RETAP</span> is (c) Jonathan Hudson &lt;<a href="mailto:jh+w1retap@daria.co.uk">jh+w1retap@daria.co.uk</a>&gt;. It is released (mainly) under the GNU Public licence.</p></body></html>